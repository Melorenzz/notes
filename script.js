let createNewNote = document.getElementById("createNewNote");
let newNoteTitle = document.getElementById("newNoteTitle");
let noteContent = document.getElementById("noteContent");
let closeBtn = document.getElementById("closeBtn");
let popupCreateNote = document.getElementById("popupCreateNote");
let noteTitleOpen = document.getElementById("noteTitleOpen");
let popup = document.querySelector('.creating_note-container');
let creatingNote = document.getElementById("creatingNote");
let notes = [];

// Auto-display popup when no elements are present
setInterval(() => {
    if((document.querySelector('.scroll_block')).childElementCount < 1){
        popup.style.display = 'flex'
        closeBtn.style.display = 'none';
    }

})
//////////////////////////////////////////////////////

createNewNote.addEventListener("click", () => {
    popup.style.display = 'flex'
    closeBtn.style.display = 'flex';

})
closeBtn.addEventListener("click", () => {
    popup.style.display = 'none'
})
// Added a function to closing the popup when clicking outside of it

popup.addEventListener('click', (e) => {
    popup.style.display = 'none'

})
creatingNote.addEventListener("click", (e) => {
    e.stopPropagation();
})

////////////////////////////////////////////////////////////////////
popupCreateNote.addEventListener("click", () => {

    if((newNoteTitle.value).length < 1){
        newNoteTitle.style.border = '2px solid red'
        setTimeout(()=>{
            newNoteTitle.style.border = '2px solid #555'
        }, 1500)
    }else{

        // Creating HTML elements with class
        const note = document.createElement('div')
        note.classList.add('note');
        const note_title = document.createElement('p')
        note_title.classList.add('note_title');
        note_title.id = 'noteTitle';
        const deleteImg = document.createElement('img');
        deleteImg.src = './img/icons8-trash.svg'
        deleteImg.classList.add('delete_img');
        const note_date = document.createElement('p')
        note_date.classList.add('note_date');

        note.appendChild(deleteImg);
        note.appendChild(note_title);
        note.appendChild(note_date);
        document.querySelector('.scroll_block').appendChild(note);
        ////////////////////////////////////

        // Added a button to delete a note
        deleteImg.addEventListener('click', () => {
            note.remove();
            noteTitleOpen.value = '';
        })
        //////////////////////////////////////

        // Added the month and day when note was created
        const months = [
            'January', 'February', 'March', 'April', 'May', 'June',
            'July', 'August', 'September', 'October', 'November', 'December'
        ];
        const now = new Date();
        note_date.innerHTML = months[now.getMonth()] + ' ' +now.getDate();

        note_title.innerHTML = newNoteTitle.value;
        noteTitleOpen.value = newNoteTitle.value;

        noteTitleOpen.addEventListener('input', () => {
            note_title.innerHTML = noteTitleOpen.value;
        })
        ///////////////////////////////////////


        // Added note in the massive
        notes.push({
            id: notes.length ? notes[notes.length - 1].id + 1 : 1, // This line is generated by ChatGPT
            title: newNoteTitle.value,
            content: noteContent.value,
        })
        ///////////////////////////////


        // Cleaning input after creation
        newNoteTitle.value = "";
        noteContent.value = "";

        popup.style.display = 'none'
        ///////////////////////////////


        // Added a function for note switching
        note.addEventListener('click', () => {

            let selectedNote = notes.find(n => n.title === note_title.innerHTML);
            if (selectedNote) {
                noteTitleOpen.value = selectedNote.title;

                noteContent.addEventListener('input', () => {
                    selectedNote.content = noteContent.value;

                })
            }

        });
        ////////////////////////////////////////////
        //  I need to add a function to save the note content
        // I haven't figured out how to make the content save and display correctly yet. Right now, I have one idea, but I need some time to think about how to implement it properly and whether it will work at all.
        ////////////////////////////////////////////

    }

})

